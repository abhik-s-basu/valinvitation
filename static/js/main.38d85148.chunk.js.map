{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Page","noCount","setNoCount","useState","yesPressed","setYesPressed","yesButtonSize","React","createElement","className","Fragment","src","alt","style","fontSize","onClick","handleNoClick","getNoButtonText","phrases","Math","min","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"0LAGe,SAASA,IACtB,MAAOC,EAASC,GAAcC,mBAAS,IAChCC,EAAYC,GAAiBF,oBAAS,GACvCG,EAA0B,GAAVL,EAAe,GA6BrC,OACEM,IAAAC,cAAA,OAAKC,UAAU,aACZL,EACCG,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAAA,OACEG,IAAI,qEACJC,IAAI,cAENL,IAAAC,cAAA,OAAKC,UAAU,2BAA0B,sCAG3CF,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAAA,OACEC,UAAU,QACVE,IAAI,0EACJC,IAAI,cAENL,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,yEAC9BF,IAAAC,cAAA,WACED,IAAAC,cAAA,UACEC,UAAU,YACVI,MAAO,CAAEC,SAAUR,GACnBS,QAASA,IAAMV,GAAc,IAC9B,OAGDE,IAAAC,cAAA,UACEC,UAAU,WACVM,QAvDUC,KACpBd,EAAWD,EAAU,KAwDE,IAAZA,EAAgB,KArDLgB,MACtB,MAAMC,EAAU,CACd,KACA,gBACA,eACA,eACA,eACA,cACA,yBACA,2BACA,8BACA,2BACA,gBACA,oBACA,mBACA,2BACA,6BACA,+BAGF,OAAOA,EAAQC,KAAKC,IAAInB,EAASiB,EAAQG,OAAS,KAiChBJ,OCrDvBK,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACiC,EAAG,QAORnB","file":"static/js/main.38d85148.chunk.js","sourcesContent":["import './styles.css';\nimport React, { useState } from \"react\";\n\nexport default function Page() {\n  const [noCount, setNoCount] = useState(0);\n  const [yesPressed, setYesPressed] = useState(false);\n  const yesButtonSize = noCount * 20 + 16;\n\n  const handleNoClick = () => {\n    setNoCount(noCount + 1);\n  };\n\n  const getNoButtonText = () => {\n    const phrases = [\n      \"No\",\n      \"Are you sure?\",\n      \"Really sure?\",\n      \"Think again!\",\n      \"Last chance!\",\n      \"Surely not?\",\n      \"You might regret this!\",\n      \"Give it another thought!\",\n      \"Are you absolutely certain?\",\n      \"This could be a mistake!\",\n      \"Have a heart!\",\n      \"Don't be so cold!\",\n      \"Change of heart?\",\n      \"Wouldn't you reconsider?\",\n      \"Is that your final answer?\",\n      \"You're breaking my heart ;(\",\n    ];\n\n    return phrases[Math.min(noCount, phrases.length - 1)];\n  };\n\n  return (\n    <div className=\"container\">\n      {yesPressed ? (\n        <>\n          <img\n            src=\"https://media.tenor.com/gUiu1zyxfzYAAAAi/bear-kiss-bear-kisses.gif\"\n            alt=\"Bear Kiss\"\n          />\n          <div className=\"text-4xl font-bold my-4\">Ok yay balle balle shawa shawa!!!</div>\n        </>\n      ) : (\n        <>\n          <img\n            className=\"image\"\n            src=\"https://gifdb.com/images/high/cute-love-bear-roses-ou7zho5oosxnpo6k.gif\"\n            alt=\"Love Bear\"\n          />\n          <h1 className=\"text-4xl my-4\">Hello Dholu, will you be my Valentine and come to masquerade with me?</h1>\n          <div>\n            <button\n              className=\"yesButton\"\n              style={{ fontSize: yesButtonSize }}\n              onClick={() => setYesPressed(true)}\n            >\n              Yes\n            </button>\n            <button\n              className=\"noButton\"\n              onClick={handleNoClick}\n            >\n              {noCount === 0 ? \"No\" : getNoButtonText()}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}